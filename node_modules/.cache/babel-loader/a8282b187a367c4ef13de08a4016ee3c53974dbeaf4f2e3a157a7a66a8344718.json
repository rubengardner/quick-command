{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useGetCommands = () => {\n  _s();\n  const [commands, setCommands] = useState([]);\n  useEffect(() => {\n    // @ts-ignore\n    chrome.storage.sync.get(['commands']).then(result => {\n      setCommands(result.commands || []);\n    }).catch(err => {\n      console.error('Error fetching commands:', err);\n    });\n  }, []);\n  return commands;\n};\n_s(useGetCommands, \"mAOdeVGVeGwXqSSgsy7fYuKb8ig=\");\nexport default useGetCommands;","map":{"version":3,"names":["useState","useEffect","useGetCommands","_s","commands","setCommands","chrome","storage","sync","get","then","result","catch","err","console","error"],"sources":["/Users/ruben_gardner/personalProject/quick-command-3/src/dataAccess/useGetCommands.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {Command} from \"../commands/commandTypes\";\n\nconst useGetCommands = () => {\n  const [commands, setCommands] = useState<Command[]>([]);\n\n  useEffect(() => {\n    // @ts-ignore\n    chrome.storage.sync.get(['commands']).then((result) => {\n      setCommands(result.commands || []);\n    }).catch((err: any) => {\n      console.error('Error fetching commands:', err);\n    });\n  }, []);\n\n  return commands;\n};\n\nexport default useGetCommands;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAG3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAY,EAAE,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd;IACAK,MAAM,CAACC,OAAO,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;MACrDN,WAAW,CAACM,MAAM,CAACP,QAAQ,IAAI,EAAE,CAAC;IACpC,CAAC,CAAC,CAACQ,KAAK,CAAEC,GAAQ,IAAK;MACrBC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAChD,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOT,QAAQ;AACjB,CAAC;AAACD,EAAA,CAbID,cAAc;AAepB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}