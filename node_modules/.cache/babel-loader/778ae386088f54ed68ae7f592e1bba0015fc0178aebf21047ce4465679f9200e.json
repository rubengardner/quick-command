{"ast":null,"code":"var _jsxFileName = \"/Users/ruben_gardner/personalProject/quick-command-3/src/components/Terminal/Terminal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './Terminal.module.css';\nimport { commandRunner } from \"../../commands/commandRunner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Terminal = props => {\n  _s();\n  const {\n    commands\n  } = props;\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const handleCommand = commandName => {\n    const command = commands.find(cmd => cmd.shortcut.toLowerCase() === commandName.toLowerCase());\n    if (command) {\n      commandRunner(command);\n      setOutput(`Executed command: ${commandName}`);\n    } else {\n      setOutput(`Command not recognized: ${commandName}`);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleCommand(input);\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.commandline,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.prompt,\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: handleKeyDown,\n      className: styles.commandinput,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Terminal, \"DmRvfRMhZGwUzWaiGgNNzsVTO9w=\");\n_c = Terminal;\nexport default Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useState","styles","commandRunner","jsxDEV","_jsxDEV","Terminal","props","_s","commands","input","setInput","output","setOutput","handleCommand","commandName","command","find","cmd","shortcut","toLowerCase","handleKeyDown","e","key","className","commandline","children","prompt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyDown","commandinput","autoFocus","_c","$RefreshReg$"],"sources":["/Users/ruben_gardner/personalProject/quick-command-3/src/components/Terminal/Terminal.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport styles from './Terminal.module.css';\nimport {commandRunner} from \"../../commands/commandRunner\";\nimport {Command} from \"../../commands/commandTypes\";\n\n\ninterface TerminalProps {\n    commands: Command[];\n}\n\nconst Terminal = (props: TerminalProps) => {\n    const {commands} = props;\n    const [input, setInput] = useState('');\n    const [output, setOutput] = useState('');\n\n\n    const handleCommand = (commandName: string) => {\n        const command = commands.find(cmd => cmd.shortcut.toLowerCase() === commandName.toLowerCase());\n\n        if (command) {\n            commandRunner(command);\n            setOutput(`Executed command: ${commandName}`);\n        } else {\n            setOutput(`Command not recognized: ${commandName}`);\n        }\n\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            handleCommand(input);\n            setInput('');\n        }\n    };\n\n    return (\n        <div className={styles.commandline}>\n            <div className={styles.prompt}>\n                {output}\n            </div>\n            <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyDown={handleKeyDown}\n                className={styles.commandinput}\n                autoFocus\n            />\n        </div>\n    );\n};\n\nexport default Terminal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAAQC,aAAa,QAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ3D,MAAMC,QAAQ,GAAIC,KAAoB,IAAK;EAAAC,EAAA;EACvC,MAAM;IAACC;EAAQ,CAAC,GAAGF,KAAK;EACxB,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAGxC,MAAMa,aAAa,GAAIC,WAAmB,IAAK;IAC3C,MAAMC,OAAO,GAAGP,QAAQ,CAACQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,KAAKL,WAAW,CAACK,WAAW,CAAC,CAAC,CAAC;IAE9F,IAAIJ,OAAO,EAAE;MACTb,aAAa,CAACa,OAAO,CAAC;MACtBH,SAAS,CAAC,qBAAqBE,WAAW,EAAE,CAAC;IACjD,CAAC,MAAM;MACHF,SAAS,CAAC,2BAA2BE,WAAW,EAAE,CAAC;IACvD;EAEJ,CAAC;EAED,MAAMM,aAAa,GAAIC,CAAwC,IAAK;IAChE,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACnBT,aAAa,CAACJ,KAAK,CAAC;MACpBC,QAAQ,CAAC,EAAE,CAAC;IAChB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKmB,SAAS,EAAEtB,MAAM,CAACuB,WAAY;IAAAC,QAAA,gBAC/BrB,OAAA;MAAKmB,SAAS,EAAEtB,MAAM,CAACyB,MAAO;MAAAD,QAAA,EACzBd;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN1B,OAAA;MACI2B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEvB,KAAM;MACbwB,QAAQ,EAAGZ,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;MAC1CG,SAAS,EAAEf,aAAc;MACzBG,SAAS,EAAEtB,MAAM,CAACmC,YAAa;MAC/BC,SAAS;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACvB,EAAA,CAxCIF,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}