{"ast":null,"code":"var _jsxFileName = \"/Users/ruben_gardner/personalProject/quick-command-3/src/components/CommandDashboard/CommandDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EditCommand from \"../EditComand/EditCommand\";\nimport CommandsDisplay from \"../CommandsDisplay/CommandsDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommandDashboard = props => {\n  _s();\n  const {\n    commands\n  } = props;\n  const [filteredCommands, setFilteredCommands] = useState(commands);\n  const [editingCommand, setEditingCommand] = useState(null);\n  const handleSearch = query => {\n    const lowercasedQuery = query.toLowerCase();\n    const newFilteredCommands = commands.filter(command => command.name.toLowerCase().includes(lowercasedQuery) || command.shortcut.toLowerCase().includes(lowercasedQuery));\n    setFilteredCommands(newFilteredCommands);\n  };\n  const handleEdit = command => {\n    setEditingCommand(command);\n  };\n  const handleSave = updatedCommand => {\n    const updatedCommands = filteredCommands.map(cmd => cmd.id === updatedCommand.id ? updatedCommand : cmd);\n    setFilteredCommands(updatedCommands);\n    setEditingCommand(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editingCommand ? /*#__PURE__*/_jsxDEV(EditCommand, {\n      command: editingCommand,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(CommandsDisplay, {\n      commands: filteredCommands,\n      onEdit: handleEdit,\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(CommandDashboard, \"5nhQlYz4U0uMgE4dP2zjeEsDhxo=\");\n_c = CommandDashboard;\nexport default CommandDashboard;\nvar _c;\n$RefreshReg$(_c, \"CommandDashboard\");","map":{"version":3,"names":["React","useState","EditCommand","CommandsDisplay","jsxDEV","_jsxDEV","CommandDashboard","props","_s","commands","filteredCommands","setFilteredCommands","editingCommand","setEditingCommand","handleSearch","query","lowercasedQuery","toLowerCase","newFilteredCommands","filter","command","name","includes","shortcut","handleEdit","handleSave","updatedCommand","updatedCommands","map","cmd","id","children","onSave","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onSearch","_c","$RefreshReg$"],"sources":["/Users/ruben_gardner/personalProject/quick-command-3/src/components/CommandDashboard/CommandDashboard.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport EditCommand from \"../EditComand/EditCommand\";\nimport CommandsDisplay from \"../CommandsDisplay/CommandsDisplay\";\nimport {Command} from \"../../commands/commandTypes\";\n\n\ninterface MenuProps {\n    commands: Command[];\n}\n\nconst CommandDashboard = (props: MenuProps) => {\n    const {commands} = props;\n    const [filteredCommands, setFilteredCommands] = useState(commands);\n    const [editingCommand, setEditingCommand] = useState<Command | null>(null);\n\n    const handleSearch = (query: string) => {\n        const lowercasedQuery = query.toLowerCase();\n        const newFilteredCommands = commands.filter(command =>\n            command.name.toLowerCase().includes(lowercasedQuery) ||\n            command.shortcut.toLowerCase().includes(lowercasedQuery)\n        );\n        setFilteredCommands(newFilteredCommands);\n    };\n\n    const handleEdit = (command: Command) => {\n        setEditingCommand(command);\n    };\n\n    const handleSave = (updatedCommand: Command) => {\n        const updatedCommands = filteredCommands.map(cmd =>\n            cmd.id === updatedCommand.id ? updatedCommand : cmd\n        );\n        setFilteredCommands(updatedCommands);\n        setEditingCommand(null);\n    };\n\n\n    return (\n        <div>\n            {editingCommand ? (\n                <EditCommand\n                    command={editingCommand}\n                    onSave={handleSave}\n                />\n            ) : (\n                <CommandsDisplay\n                    commands={filteredCommands}\n                    onEdit={handleEdit}\n                    onSearch={handleSearch}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default CommandDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,eAAe,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQjE,MAAMC,gBAAgB,GAAIC,KAAgB,IAAK;EAAAC,EAAA;EAC3C,MAAM;IAACC;EAAQ,CAAC,GAAGF,KAAK;EACxB,MAAM,CAACG,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAACQ,QAAQ,CAAC;EAClE,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAiB,IAAI,CAAC;EAE1E,MAAMa,YAAY,GAAIC,KAAa,IAAK;IACpC,MAAMC,eAAe,GAAGD,KAAK,CAACE,WAAW,CAAC,CAAC;IAC3C,MAAMC,mBAAmB,GAAGT,QAAQ,CAACU,MAAM,CAACC,OAAO,IAC/CA,OAAO,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,eAAe,CAAC,IACpDI,OAAO,CAACG,QAAQ,CAACN,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,eAAe,CAC3D,CAAC;IACDL,mBAAmB,CAACO,mBAAmB,CAAC;EAC5C,CAAC;EAED,MAAMM,UAAU,GAAIJ,OAAgB,IAAK;IACrCP,iBAAiB,CAACO,OAAO,CAAC;EAC9B,CAAC;EAED,MAAMK,UAAU,GAAIC,cAAuB,IAAK;IAC5C,MAAMC,eAAe,GAAGjB,gBAAgB,CAACkB,GAAG,CAACC,GAAG,IAC5CA,GAAG,CAACC,EAAE,KAAKJ,cAAc,CAACI,EAAE,GAAGJ,cAAc,GAAGG,GACpD,CAAC;IACDlB,mBAAmB,CAACgB,eAAe,CAAC;IACpCd,iBAAiB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAGD,oBACIR,OAAA;IAAA0B,QAAA,EACKnB,cAAc,gBACXP,OAAA,CAACH,WAAW;MACRkB,OAAO,EAAER,cAAe;MACxBoB,MAAM,EAAEP;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,gBAEF/B,OAAA,CAACF,eAAe;MACZM,QAAQ,EAAEC,gBAAiB;MAC3B2B,MAAM,EAAEb,UAAW;MACnBc,QAAQ,EAAExB;IAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA3CIF,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AA6CtB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}