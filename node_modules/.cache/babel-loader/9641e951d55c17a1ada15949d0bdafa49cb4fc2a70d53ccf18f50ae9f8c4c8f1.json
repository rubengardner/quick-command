{"ast":null,"code":"var _jsxFileName = \"/Users/ruben_gardner/personalProject/quick-command-3/src/components/Add/AddCommand/AddCommand.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CommandType } from '../../../commands/commandTypes';\nimport styles from './AddCommand.module.css';\nimport TypeSpecificFields from \"../TypeSpecificFields/TypeSpecificFields\";\nimport { saveCommands } from \"../../../dataAccess\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCommand = () => {\n  _s();\n  const [newCommand, setNewCommand] = useState({\n    name: \"\",\n    shortcut: \"\",\n    type: CommandType.Navigate,\n    fields: {}\n  });\n  const handleSelectChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCommand(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleFieldChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCommand({\n      ...newCommand,\n      fields: {\n        ...newCommand.fields,\n        [name]: value\n      }\n    });\n  };\n  const handleSubmit = async () => {\n    console.log('Saving command:', newCommand);\n    try {\n      await saveCommands([newCommand]);\n      console.log('New command saved:', newCommand);\n    } catch (error) {\n      console.error('Error saving command:', error);\n    }\n  };\n  const commandValues = Object.values(CommandType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: \"Add Command\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.label,\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.input,\n        type: \"text\",\n        name: \"name\",\n        value: newCommand.name,\n        onChange: e => setNewCommand(prevState => ({\n          ...prevState,\n          [e.target.name]: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.label,\n      children: [\"Shortcut:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: styles.input,\n        name: \"shortcut\",\n        value: newCommand.shortcut,\n        onChange: e => setNewCommand(prevState => ({\n          ...prevState,\n          [e.target.name]: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.label,\n      children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        className: styles.commandType,\n        value: newCommand.type,\n        onChange: handleSelectChange,\n        children: commandValues.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value,\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TypeSpecificFields, {\n      type: newCommand.type,\n      fields: newCommand.fields,\n      handleFieldChange: handleFieldChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.saveButton,\n      onClick: handleSubmit,\n      children: \"Add Command\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(AddCommand, \"EhzGEVgwdEzKVqqWXYf/t/DrBIo=\");\n_c = AddCommand;\nexport default AddCommand;\nvar _c;\n$RefreshReg$(_c, \"AddCommand\");","map":{"version":3,"names":["React","useState","CommandType","styles","TypeSpecificFields","saveCommands","jsxDEV","_jsxDEV","AddCommand","_s","newCommand","setNewCommand","name","shortcut","type","Navigate","fields","handleSelectChange","e","value","target","prevState","handleFieldChange","handleSubmit","console","log","error","commandValues","Object","values","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","label","input","onChange","commandType","map","saveButton","onClick","_c","$RefreshReg$"],"sources":["/Users/ruben_gardner/personalProject/quick-command-3/src/components/Add/AddCommand/AddCommand.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {CommandType} from '../../../commands/commandTypes';\nimport {Command} from '../../../commands/commandTypes';\nimport styles from './AddCommand.module.css';\nimport TypeSpecificFields from \"../TypeSpecificFields/TypeSpecificFields\";\nimport {saveCommands} from \"../../../dataAccess\";\n\n\nconst AddCommand = () => {\n    const [newCommand, setNewCommand] = useState({\n        name: \"\",\n        shortcut: \"\",\n        type: CommandType.Navigate,\n        fields: {},\n    });\n\n    const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n      const { name, value } = e.target;\n      setNewCommand((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    };\n\n    const handleFieldChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const {name, value} = e.target;\n        setNewCommand({\n            ...newCommand,\n            fields: {\n                ...newCommand.fields,\n                [name]: value,\n            },\n        });\n    };\n\n    const handleSubmit = async () => {\n        console.log('Saving command:', newCommand);\n        try {\n            await saveCommands([newCommand]);\n            console.log('New command saved:', newCommand);\n        } catch (error) {\n            console.error('Error saving command:', error);\n        }\n    };\n\n\n    const commandValues = Object.values(CommandType);\n\n    return (\n        <div className={styles.container}>\n            <h2 className={styles.title}>Add Command</h2>\n            <label className={styles.label}>\n                Name:\n                <input\n                    className={styles.input}\n                    type=\"text\"\n                    name=\"name\"\n                    value={newCommand.name}\n                    onChange={(e) => setNewCommand((prevState) => ({...prevState, [e.target.name]: e.target.value,}))}\n                />\n            </label>\n            <label className={styles.label}>\n                Shortcut:\n                <input\n                    type=\"text\"\n                    className={styles.input}\n                    name=\"shortcut\"\n                    value={newCommand.shortcut}\n                   onChange={(e) => setNewCommand((prevState) => ({...prevState, [e.target.name]: e.target.value,}))}\n                />\n            </label>\n            <label className={styles.label}>\n                Type:\n                <select\n                    name=\"type\"\n                    className={styles.commandType}\n                    value={newCommand.type}\n                    onChange={handleSelectChange}\n                >\n                    {commandValues.map((value) => (\n                        <option key={value} value={value}>\n                            {value}\n                        </option>\n                    ))}\n                </select>\n            </label>\n            <TypeSpecificFields\n                type={newCommand.type}\n                fields={newCommand.fields}\n                handleFieldChange={handleFieldChange}\n            />\n            <button className={styles.saveButton} onClick={handleSubmit}>Add Command</button>\n        </div>\n    );\n};\n\nexport default AddCommand;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}